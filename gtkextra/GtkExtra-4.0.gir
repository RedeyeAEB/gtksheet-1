<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gtk" version="3.0"/>
  <namespace name="GtkExtra"
             version="4.0.0"
             shared-library="libgtkextra-x11-4.0.so.0"
             c:identifier-prefixes="Gtk"
             c:symbol-prefixes="gtk">
    <class name="DataEntry"
           c:symbol-prefix="data_entry"
           c:type="GtkDataEntry"
           parent="Gtk.Entry"
           glib:type-name="GtkDataEntry"
           glib:get-type="gtk_data_entry_get_type"
           glib:type-struct="DataEntryClass">
      <doc xml:space="preserve">GtkDataEntry provides additional properties:

- #GtkDataEntry:description - no functionality, a place for
  private information that cannot be put anywhere else

- #GtkDataEntry:datatype - no functionality, a datatype hint
  for the application because any widget content is text

- #GtkDataEntry:dataformat - a formatting instruction that
  controls what you see when the widget doesn't have input
  focus

- #GtkDataEntry:text - set the contents of the widget. if the
  widget doesn't have input focus text will be formatted
  according to the data_format

- #GtkDataEntry:max-length-bytes - set the maximum byte
  length for the contents of the widget.

The main reason for this widget is to provide a formatting
entry widget for numeric data like integer, float, money
which also supports NULL values (GtkSpinButton is nice but
doesn't support empty field values). Handling of Null values
is supported by all SQL database systems. The Null values are
represented by empty field contents.

When editing field contents, all data formatting is removed
before the focus enters the widget. As soon as the focus
leaves the widget, data will be nicely formatted again.

As an additional feature, the minus sign (negative numbers)
can be entered at the end of the data. As soon as you leave
the field it will be placed properly in front of the number.

See also: gtk_data_format()</doc>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.CellEditable"/>
      <implements name="Gtk.Editable"/>
      <constructor name="new" c:identifier="gtk_data_entry_new">
        <doc xml:space="preserve">Creates a new GtkDataEntry Widget.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the new GtkDataEntry Widget</doc>
          <type name="DataEntry" c:type="GtkDataEntry*"/>
        </return-value>
      </constructor>
      <method name="get_data_format"
              c:identifier="gtk_data_entry_get_data_format">
        <doc xml:space="preserve">Retrieves the #GtkDataEntry data_format.

See gtk_data_format() for details.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a pointer to the contents of the widget as a
     string. This string points to internally allocated
     storage in the widget and must not be freed, modified or
     stored.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_data_type" c:identifier="gtk_data_entry_get_data_type">
        <doc xml:space="preserve">Retrieves the #GtkDataEntry data_type.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a pointer to the contents of the widget as a
     string. This string points to internally allocated
     storage in the widget and must not be freed, modified or
     stored.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="gtk_data_entry_get_description">
        <doc xml:space="preserve">Retrieves the #GtkDataEntry description.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a pointer to the contents of the widget as a
     string. This string points to internally allocated
     storage in the widget and must not be freed, modified or
     stored.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_length_bytes"
              c:identifier="gtk_data_entry_get_max_length_bytes"
              version="3.0.6">
        <doc xml:space="preserve">Retrieves the maximum byte length for the contents of
#GtkDataEntry.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">maximum byte length or 0.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text" c:identifier="gtk_data_entry_get_text">
        <doc xml:space="preserve">Retrieves the #GtkDataEntry contents. All formatting will be
removed.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a pointer to the contents of the widget as a
     string. This string points to internally allocated
     storage in the widget and must not be freed, modified or
     stored.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_data_format"
              c:identifier="gtk_data_entry_set_data_format">
        <doc xml:space="preserve">Sets the GtkDataEntry data type for application use. The
display will not be refreshed upon change.

See gtk_data_format() for details.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
          <parameter name="data_format" transfer-ownership="none">
            <doc xml:space="preserve">the data type or NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_data_type" c:identifier="gtk_data_entry_set_data_type">
        <doc xml:space="preserve">Sets the GtkDataEntry data type for application use.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve">the data type or NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="gtk_data_entry_set_description">
        <doc xml:space="preserve">Sets the GtkDataEntry description.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve">the description or NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_length_bytes"
              c:identifier="gtk_data_entry_set_max_length_bytes"
              version="3.0.6">
        <doc xml:space="preserve">Sets the maximum byte length for the contents of the
#GtkDataEntry. Existing content will not be truncted.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
          <parameter name="max_length_bytes" transfer-ownership="none">
            <doc xml:space="preserve">maximum byte length or 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text" c:identifier="gtk_data_entry_set_text">
        <doc xml:space="preserve">Sets the GtkDataEntry contents. The contents will be
formatted due to the current data_format.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_entry" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataEntry</doc>
            <type name="DataEntry" c:type="GtkDataEntry*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve">the contents to be set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="dataformat" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">a formatting string that controls what you see when the
widget doesn't contain input focus.

See gtk_data_format() for details.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="datatype" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">no functionality, a datatype hint for the application because
any widget content is text.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="description" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Description of the GtkDataEntry, no functionality, a place
for private information that cannot be put anywhere else.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="max-length-bytes"
                version="3.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Set the maximum length in bytes for the GtkDataEntry. For
details see #gtk_data_entry_set_max_length_bytes.

Sometimes, systems cannot handle UTF-8 string length
correctly, to overcome this problem, you can use the maximum
string length in bytes. When setting both limits, max-length
 and max-length-bytes, both must be fulfilled.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="text" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Set the contents of the GtkDataEntry. For details see
#gtk_data_entry_set_text.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="entry" readable="0" private="1">
        <type name="Gtk.Entry" c:type="GtkEntry"/>
      </field>
      <field name="data_type" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="data_format" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="max_length_bytes" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
    </class>
    <record name="DataEntryClass"
            c:type="GtkDataEntryClass"
            glib:is-gtype-struct-for="DataEntry">
      <field name="parent_class">
        <type name="Gtk.EntryClass" c:type="GtkEntryClass"/>
      </field>
    </record>
    <class name="DataTextView"
           c:symbol-prefix="data_text_view"
           c:type="GtkDataTextView"
           parent="Gtk.TextView"
           glib:type-name="GtkDataTextView"
           glib:get-type="gtk_data_text_view_get_type"
           glib:type-struct="DataTextViewClass">
      <doc xml:space="preserve">GtkDataTextView provides additional properties:

- #GtkDataTextView:description - no functionality, a place for
  private information that cannot be put anywhere else

- #GtkDataTextView:max-length - set the maximum character
  length for the contents of the widget.

- #GtkDataTextView:max-length-bytes - set the maximum byte
  length for the contents of the widget.

The main reason for this widget is to provide a length limit
for text contents, required by SQL database systems. There
is always a limit, no matter what you do.
 
Some database systems may handle character length of UTF-8
strings correctly, others may not. Choose the appropriate
limit for your system, characters or bytes.
 
Note that setting a byte length limit &gt; 0 on a datatextview
may slow down text insertions. The  byte length limit is
imposed upon gtk_text_buffer_get_text() including invisible
content. See gtk_text_buffer_get_text() for details.</doc>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new"
                   c:identifier="gtk_data_text_view_new"
                   version="3.0.6">
        <doc xml:space="preserve">Creates a new GtkDataTextView Widget.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the new GtkDataTextView Widget</doc>
          <type name="DataTextView" c:type="GtkDataTextView*"/>
        </return-value>
      </constructor>
      <method name="get_description"
              c:identifier="gtk_data_text_view_get_description"
              version="3.0.6">
        <doc xml:space="preserve">Retrieves the #GtkDataTextView description.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a pointer to the contents of the widget as a
     string. This string points to internally allocated
     storage in the widget and must not be freed, modified or
     stored.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_text_view" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataTextView</doc>
            <type name="DataTextView" c:type="GtkDataTextView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_length"
              c:identifier="gtk_data_text_view_get_max_length"
              version="3.0.6">
        <doc xml:space="preserve">Retrieves the maximum character length for the contents of
#GtkDataTextView.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">maximum byte length or 0.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_text_view" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataTextView</doc>
            <type name="DataTextView" c:type="GtkDataTextView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_length_bytes"
              c:identifier="gtk_data_text_view_get_max_length_bytes"
              version="3.0.6">
        <doc xml:space="preserve">Retrieves the maximum byte length for the contents of
#GtkDataTextView data_format.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">maximum byte length or 0.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_text_view" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataTextView</doc>
            <type name="DataTextView" c:type="GtkDataTextView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="gtk_data_text_view_set_description"
              version="3.0.6">
        <doc xml:space="preserve">Sets the GtkDataTextView description.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_text_view" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataTextView</doc>
            <type name="DataTextView" c:type="GtkDataTextView*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve">the description or NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_length"
              c:identifier="gtk_data_text_view_set_max_length"
              version="3.0.6">
        <doc xml:space="preserve">Sets the maximum character length for the contents of the
#GtkDataTextView. Existing content will not be truncted.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_text_view" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataTextView</doc>
            <type name="DataTextView" c:type="GtkDataTextView*"/>
          </instance-parameter>
          <parameter name="max_length" transfer-ownership="none">
            <doc xml:space="preserve">maximum character length or 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_length_bytes"
              c:identifier="gtk_data_text_view_set_max_length_bytes"
              version="3.0.6">
        <doc xml:space="preserve">Sets the maximum byte length for the contents of the
GtkDataTextView. Existing content will not be truncted.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="data_text_view" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkDataTextView</doc>
            <type name="DataTextView" c:type="GtkDataTextView*"/>
          </instance-parameter>
          <parameter name="max_length_bytes" transfer-ownership="none">
            <doc xml:space="preserve">maximum byte length or 0</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="description"
                version="3.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Description of the GtkDataTextView, no functionality, a place
for private information that cannot be put anywhere else.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="max-length"
                version="3.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Set the maximum length in characters for the GtkDataTextView.
For details see #gtk_data_text_view_set_max_length.

Sometimes, systems cannot handle UTF-8 string length
correctly, to overcome this problem, you can use the maximum
string length in bytes. When setting both limits, max-length
 and max-length-bytes, both must be fulfilled.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="max-length-bytes"
                version="3.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Set the maximum length in bytes for the GtkDataTextView. For
details see #gtk_data_text_view_set_max_length_bytes.

Sometimes, systems cannot handle UTF-8 string length
correctly, to overcome this problem, you can use the maximum
string length in bytes. When setting both limits, max-length
 and max-length-bytes, both must be fulfilled.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="textview" readable="0" private="1">
        <type name="Gtk.TextView" c:type="GtkTextView"/>
      </field>
      <field name="description" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="max_length" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="max_length_bytes" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
    </class>
    <record name="DataTextViewClass"
            c:type="GtkDataTextViewClass"
            glib:is-gtype-struct-for="DataTextView">
      <field name="parent_class">
        <type name="Gtk.TextViewClass" c:type="GtkTextViewClass"/>
      </field>
    </record>
    <constant name="SHEET_COLUMN_DEFAULT_WIDTH"
              value="80"
              c:type="GTK_SHEET_COLUMN_DEFAULT_WIDTH">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="SHEET_COLUMN_MIN_WIDTH"
              value="10"
              c:type="GTK_SHEET_COLUMN_MIN_WIDTH">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="SHEET_OPTIMIZE_COLUMN_DRAW"
              value="0"
              c:type="GTK_SHEET_OPTIMIZE_COLUMN_DRAW">
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Sheet"
           c:symbol-prefix="sheet"
           c:type="GtkSheet"
           parent="Gtk.Container"
           glib:type-name="GtkSheet"
           glib:get-type="gtk_sheet_get_type"
           glib:type-struct="SheetClass">
      <doc xml:space="preserve">#GtkSheet is a matrix widget for GTK+. It consists of an scrollable grid of
cells where you can put text or other #GtkWidget's in. Cells
are organized in rows (#GtkSheetRow) and columns
(#GtkSheetColumn). Cell contents can be edited interactively
through a specially designed entry (#GtkItemEntry). A
#GtkSheet is also a container subclass, allowing you to
display buttons, curves, pixmaps and any other widget in it.
You can also set many attributes as: border, foreground and
background color, text justification, and more. The
testgtksheet program shows how easy is to create a
spreadsheet-like GUI using this widget set.</doc>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Scrollable"/>
      <constructor name="new" c:identifier="gtk_sheet_new">
        <doc xml:space="preserve">Creates a new sheet widget with the given number of rows and columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the new sheet #GtkSheet</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:space="preserve">initial number of rows</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve">initial number of columns</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve">sheet title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_browser" c:identifier="gtk_sheet_new_browser">
        <doc xml:space="preserve">Creates a new browser sheet. Its cells cannot be edited(read-only).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the new read-only #GtkSheet</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:space="preserve">initial number of rows</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve">initial number of columns</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve">sheet title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_custom_entry"
                   c:identifier="gtk_sheet_new_with_custom_entry">
        <doc xml:space="preserve">Creates a new sheet widget with the given number of rows and columns and a custome entry type.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the new sheet #GtkSheet</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:space="preserve">initial number of rows</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve">initial number of columns</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve">sheet title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <doc xml:space="preserve">a #GType</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="activate">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="clear_cell">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="clip_range" invoker="clip_range">
        <doc xml:space="preserve">Save selected range to "clipboard".</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="clip_range" transfer-ownership="none">
            <doc xml:space="preserve">#GtkSheetRange to be saved</doc>
            <type name="SheetRange" c:type="GtkSheetRange*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="deactivate">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="focus_in_event">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Gdk.EventFocus" c:type="GdkEventFocus*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="focus_out_event">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Gdk.EventFocus" c:type="GdkEventFocus*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move_cursor">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="step" transfer-ownership="none">
            <type name="Gtk.MovementStep" c:type="GtkMovementStep"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="extend_selection" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move_range">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="old_range" transfer-ownership="none">
            <type name="SheetRange" c:type="GtkSheetRange*"/>
          </parameter>
          <parameter name="new_range" transfer-ownership="none">
            <type name="SheetRange" c:type="GtkSheetRange*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_column_width">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_row_height">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="resize_range">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="old_range" transfer-ownership="none">
            <type name="SheetRange" c:type="GtkSheetRange*"/>
          </parameter>
          <parameter name="new_range" transfer-ownership="none">
            <type name="SheetRange" c:type="GtkSheetRange*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="select_column" invoker="select_column">
        <doc xml:space="preserve">Select the column. The range is then highlighted, and the bounds are stored in sheet-&gt;range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="select_range" invoker="select_range">
        <doc xml:space="preserve">Highlight the selected range and store bounds in sheet-&gt;range</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange</doc>
            <type name="SheetRange" c:type="GtkSheetRange*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="select_row" invoker="select_row">
        <doc xml:space="preserve">Select the row. The range is then highlighted, and the bounds are stored in sheet-&gt;range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_cell">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_scroll_adjustments">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="hadjustment" transfer-ownership="none">
            <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
          </parameter>
          <parameter name="vadjustment" transfer-ownership="none">
            <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="traverse">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="new_row" transfer-ownership="none">
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="new_column" transfer-ownership="none">
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_column" c:identifier="gtk_sheet_add_column">
        <doc xml:space="preserve">Append @ncols columns to the right of the sheet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="ncols" transfer-ownership="none">
            <doc xml:space="preserve">number of columns to be appended.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_row" c:identifier="gtk_sheet_add_row">
        <doc xml:space="preserve">Append @nrows rows to the end of the sheet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="nrows" transfer-ownership="none">
            <doc xml:space="preserve">number of rows to be appended.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="attach" c:identifier="gtk_sheet_attach">
        <doc xml:space="preserve">Attaches a child widget to the given cell with the given alignments.
Works basically like gtk_table_attach, with the same options, the widget is confined in the cell, and whether it fills the
cell, expands with it, or shrinks with it, depending on the options , if GTK_EXPAND is set.
The child is reallocated each time the column or row changes, keeping attached to the same cell.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve">#GtkWidget to be put</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="xoptions" transfer-ownership="none">
            <doc xml:space="preserve">if set GTK_EXPAND cell will expand/shrink on x direction</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="yoptions" transfer-ownership="none">
            <doc xml:space="preserve">if set GTK_EXPAND cell will expand/shrink on y direction</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="xpadding" transfer-ownership="none">
            <doc xml:space="preserve">x coordinate of the alignment</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="ypadding" transfer-ownership="none">
            <doc xml:space="preserve">y coordinate of the alignment</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="attach_default" c:identifier="gtk_sheet_attach_default">
        <doc xml:space="preserve">Attaches a child widget to the given cell with the 0,0 alignments.
Works basically like gtk_table_attach, with the same options, the widget is confined in the cell, and whether it fills the
cell, expands with it, or shrinks with it, depending on the options.
The child is reallocated each time the column or row changes, keeping attached to the same cell.
It's in fact gtk_sheet_attach() with GTK_EXPAND set.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve">#GtkWidget to be put</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="attach_floating" c:identifier="gtk_sheet_attach_floating">
        <doc xml:space="preserve">The widget is attached to the top-left corner of a cell (row,column) and moves with it when you change width,
height, or you delete of add row/columns</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve">#GtkWidget to be put</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="autoresize" c:identifier="gtk_sheet_autoresize">
        <doc xml:space="preserve">Gets the autoresize mode of #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE if autoresize_columns or autoresize_rows was
set, or FALSE if none</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="autoresize_columns"
              c:identifier="gtk_sheet_autoresize_columns">
        <doc xml:space="preserve">Gets the autoresize mode for #GtkSheet columns.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="autoresize_rows" c:identifier="gtk_sheet_autoresize_rows">
        <doc xml:space="preserve">Gets the autoresize mode for #GtkSheet rows.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="autoscroll" c:identifier="gtk_sheet_autoscroll">
        <doc xml:space="preserve">Get the autoscroll mode of #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="button_attach" c:identifier="gtk_sheet_button_attach">
        <doc xml:space="preserve">Button attach works like cell attach but for the buttons.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve">#GtkWidget to be put</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="cell_clear" c:identifier="gtk_sheet_cell_clear">
        <doc xml:space="preserve">Clear cell contents.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row_number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="cell_delete" c:identifier="gtk_sheet_cell_delete">
        <doc xml:space="preserve">Clear cell contents and remove links.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row_number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="cell_get_state" c:identifier="gtk_sheet_cell_get_state">
        <doc xml:space="preserve">Get status of a cell.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a #GtkStateType:
GTK_SHEET_NORMAL,GTK_SHEET_ROW_SELECTED,GTK_SHEET_COLUMN_SELECTED,GTK_SHEET_RANGE_SELECTED</doc>
          <type name="Gtk.StateType" c:type="GtkStateType"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="cell_get_text" c:identifier="gtk_sheet_cell_get_text">
        <doc xml:space="preserve">Get cell text.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a pointer to the cell text, or NULL.
Do not modify or free it.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="cell_get_tooltip_markup"
              c:identifier="gtk_sheet_cell_get_tooltip_markup">
        <doc xml:space="preserve">Gets the contents of the tooltip (markup) for the column</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the tooltip text, or NULL. You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="cell_get_tooltip_text"
              c:identifier="gtk_sheet_cell_get_tooltip_text">
        <doc xml:space="preserve">Gets the contents of the tooltip for the column</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the tooltip text, or NULL. You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="cell_set_tooltip_markup"
              c:identifier="gtk_sheet_cell_set_tooltip_markup">
        <doc xml:space="preserve">Sets markup as the contents of the tooltip, which is marked
up with the Pango text markup language.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="markup" transfer-ownership="none">
            <doc xml:space="preserve">the contents of the tooltip for widget, or NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="cell_set_tooltip_text"
              c:identifier="gtk_sheet_cell_set_tooltip_text">
        <doc xml:space="preserve">Sets text as the contents of the tooltip.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve">the contents of the tooltip for widget</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="change_entry" c:identifier="gtk_sheet_change_entry">
        <doc xml:space="preserve">Changes the current entry of the cell in #GtkSheet. The old
sheet entry widget gets dropped and a new entry widget is
created. Beware: You will have to reconnect all your signal
handlers after changing an entry.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <doc xml:space="preserve">a #GType</doc>
            <type name="GType" c:type="const GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="clip_range" c:identifier="gtk_sheet_clip_range">
        <doc xml:space="preserve">Save selected range to "clipboard".</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="clip_range" transfer-ownership="none">
            <doc xml:space="preserve">#GtkSheetRange to be saved</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clip_text" c:identifier="gtk_sheet_clip_text">
        <doc xml:space="preserve">Get clip text mode in #GtkSheet. When clip text mode is
turned off, cell text is written over neighbour columns, as
long as their contents are empty.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="column_button_add_label"
              c:identifier="gtk_sheet_column_button_add_label">
        <doc xml:space="preserve">Set button label.It is used to set a column title.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve">text label</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_button_get_label"
              c:identifier="gtk_sheet_column_button_get_label">
        <doc xml:space="preserve">Get column button label.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Column button label.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_button_justify"
              c:identifier="gtk_sheet_column_button_justify">
        <doc xml:space="preserve">Set the justification(alignment) of the column buttons.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="justification" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkJustification :GTK_JUSTIFY_LEFT, RIGHT,
 			 CENTER</doc>
            <type name="Gtk.Justification" c:type="GtkJustification"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get" c:identifier="gtk_sheet_column_get">
        <doc xml:space="preserve">Get a #GtkSheetColumn</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the requested #GtkSheetColumn or
NULL</doc>
          <type name="SheetColumn" c:type="GtkSheetColumn*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_datatype"
              c:identifier="gtk_sheet_column_get_datatype">
        <doc xml:space="preserve">Gets the column data_type for application use</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the datatype or NULL</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_description"
              c:identifier="gtk_sheet_column_get_description">
        <doc xml:space="preserve">Gets the column description</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the description or NULL, You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_entry_type"
              c:identifier="gtk_sheet_column_get_entry_type">
        <doc xml:space="preserve">Gets the column entry type if known</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the entry type or GTK_SHEET_ENTRY_TYPE_DEFAULT</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_format"
              c:identifier="gtk_sheet_column_get_format">
        <doc xml:space="preserve">Gets the column data formatting pattern</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the formatting pattern or NULL, You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_iskey"
              c:identifier="gtk_sheet_column_get_iskey">
        <doc xml:space="preserve">Gets the column is_key flag</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the is_key flag</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_justification"
              c:identifier="gtk_sheet_column_get_justification">
        <doc xml:space="preserve">Get the column justification.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a #GtkJustification</doc>
          <type name="Gtk.Justification" c:type="GtkJustification"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_readonly"
              c:identifier="gtk_sheet_column_get_readonly">
        <doc xml:space="preserve">Gets the column readonly flag</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the readonly flag</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_tooltip_markup"
              c:identifier="gtk_sheet_column_get_tooltip_markup">
        <doc xml:space="preserve">Gets the contents of the tooltip (markup) for the column</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the tooltip text, or NULL. You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_tooltip_text"
              c:identifier="gtk_sheet_column_get_tooltip_text">
        <doc xml:space="preserve">Gets the contents of the tooltip for the column</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the tooltip text, or NULL. You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_get_vjustification"
              c:identifier="gtk_sheet_column_get_vjustification">
        <doc xml:space="preserve">Get the vertical cell text justification. This overrides the
default vertical cell text justification of the #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a #GtkSheetVerticalJustification</doc>
          <type name="SheetVerticalJustification"
                c:type="GtkSheetVerticalJustification"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_label_set_visibility"
              c:identifier="gtk_sheet_column_label_set_visibility">
        <doc xml:space="preserve">Set column label visibility. The default value is TRUE. If FALSE, the column label is hidden.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_sensitive"
              c:identifier="gtk_sheet_column_sensitive">
        <doc xml:space="preserve">Get column button sensitivity.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE - the column is sensitive, FALSE - insensitive or not
existant</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_datatype"
              c:identifier="gtk_sheet_column_set_datatype">
        <doc xml:space="preserve">Sets the column data data_type for application use</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="data_type" transfer-ownership="none">
            <doc xml:space="preserve">the datatype</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_description"
              c:identifier="gtk_sheet_column_set_description">
        <doc xml:space="preserve">Sets the column description.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve">the description or NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_entry_type"
              c:identifier="gtk_sheet_column_set_entry_type">
        <doc xml:space="preserve">Supersedes the sheet entry type for this column. Pass
G_TYPE_NONE to reset the column to the sheet entry type.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <doc xml:space="preserve">the entry type or G_TYPE_NONE</doc>
            <type name="GType" c:type="const GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_format"
              c:identifier="gtk_sheet_column_set_format">
        <doc xml:space="preserve">Sets the column data formatting pattern.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <doc xml:space="preserve">the data_format pattern or NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_iskey"
              c:identifier="gtk_sheet_column_set_iskey">
        <doc xml:space="preserve">Sets the column is_key flag. This flag has no effect on
calculation or presentation, it is reserved for application
usage.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="is_key" transfer-ownership="none">
            <doc xml:space="preserve">the column is_key flag</doc>
            <type name="gboolean" c:type="const gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_justification"
              c:identifier="gtk_sheet_column_set_justification">
        <doc xml:space="preserve">Set column justification (GTK_JUSTIFY_LEFT, RIGHT, CENTER).
The default value is GTK_JUSTIFY_LEFT.
If autoformat is on, the default justification for numbers is
GTK_JUSTIFY_RIGHT.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="just" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkJustification : GTK_JUSTIFY_LEFT, RIGHT, CENTER</doc>
            <type name="Gtk.Justification" c:type="GtkJustification"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_readonly"
              c:identifier="gtk_sheet_column_set_readonly">
        <doc xml:space="preserve">Sets the column readonly flag.
A cell is editable if the sheet is not locked, the column is
not readonly and the cell (-range) was set to editable.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="is_readonly" transfer-ownership="none">
            <doc xml:space="preserve">the column is_readonly flag</doc>
            <type name="gboolean" c:type="const gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_sensitivity"
              c:identifier="gtk_sheet_column_set_sensitivity">
        <doc xml:space="preserve">Set column button sensitivity. If sensitivity is TRUE it can be toggled, otherwise it acts as a title.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_tooltip_markup"
              c:identifier="gtk_sheet_column_set_tooltip_markup">
        <doc xml:space="preserve">Sets markup as the contents of the tooltip, which is marked
up with the Pango text markup language.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="markup" transfer-ownership="none">
            <doc xml:space="preserve">the contents of the tooltip for widget, or NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_tooltip_text"
              c:identifier="gtk_sheet_column_set_tooltip_text">
        <doc xml:space="preserve">Sets text as the contents of the tooltip.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve">the contents of the tooltip for widget</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_visibility"
              c:identifier="gtk_sheet_column_set_visibility">
        <doc xml:space="preserve">Set column visible property.

Default value is TRUE. When set to FALSE, the column is
hidden.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_set_vjustification"
              c:identifier="gtk_sheet_column_set_vjustification">
        <doc xml:space="preserve">Set vertical cell text jjustification</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="vjust" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetVerticalJustification</doc>
            <type name="SheetVerticalJustification"
                  c:type="GtkSheetVerticalJustification"/>
          </parameter>
        </parameters>
      </method>
      <method name="column_titles_visible"
              c:identifier="gtk_sheet_column_titles_visible">
        <doc xml:space="preserve">Get the visibility of sheet column titles .</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="column_visible" c:identifier="gtk_sheet_column_visible">
        <doc xml:space="preserve">Get column visible property.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE - visible, FALSE - hidden or not existant</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="columns_labels_set_visibility"
              c:identifier="gtk_sheet_columns_labels_set_visibility">
        <doc xml:space="preserve">Set all columns labels visibility. The default value is TRUE.
If FALSE, the columns labels are hidden. The sheet itself
has no such property, it is a convenience function to set the
property for all existing columns.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="columns_resizable"
              c:identifier="gtk_sheet_columns_resizable">
        <doc xml:space="preserve">Get columns resizable status.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="columns_set_resizable"
              c:identifier="gtk_sheet_columns_set_resizable">
        <doc xml:space="preserve">Set columns resizable status.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="resizable" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="columns_set_sensitivity"
              c:identifier="gtk_sheet_columns_set_sensitivity">
        <doc xml:space="preserve">Set all columns buttons sensitivity. If sensitivity is TRUE
button can be toggled, otherwise  act as titles. The sheet itself
has no such property, it is a convenience function to set the
property for all existing columns.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="construct" c:identifier="gtk_sheet_construct">
        <doc xml:space="preserve">Initializes an existent #GtkSheet with the given number of rows and columns.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:space="preserve">number of rows</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve">number of columns</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve">sheet title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="construct_browser"
              c:identifier="gtk_sheet_construct_browser">
        <doc xml:space="preserve">Initializes an existent read-only #GtkSheet with the given number of rows and columns.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:space="preserve">number of rows</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve">number of columns</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve">sheet title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="construct_with_custom_entry"
              c:identifier="gtk_sheet_construct_with_custom_entry">
        <doc xml:space="preserve">Initializes an existent read-only #GtkSheet
with the given number of rows and columns and a custom entry.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="rows" transfer-ownership="none">
            <doc xml:space="preserve">number of rows</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="columns" transfer-ownership="none">
            <doc xml:space="preserve">number of columns</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve">sheet title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="entry_type" transfer-ownership="none">
            <doc xml:space="preserve">a #GType</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_columns" c:identifier="gtk_sheet_delete_columns">
        <doc xml:space="preserve">Delete @ncols columns starting from @col.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ncols" transfer-ownership="none">
            <doc xml:space="preserve">number of columns to be deleted.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_rows" c:identifier="gtk_sheet_delete_rows">
        <doc xml:space="preserve">Delete @nrows rows starting from @row.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="nrows" transfer-ownership="none">
            <doc xml:space="preserve">number of rows to be deleted.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="entry_select_region"
              c:identifier="gtk_sheet_entry_select_region">
        <doc xml:space="preserve">Selects a region of text.
 
This function is necessary, because not all possible entry
widgets implement the GtkEditable interface yet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="start_pos" transfer-ownership="none">
            <doc xml:space="preserve">start of region</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <doc xml:space="preserve">end of region</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="entry_signal_connect_changed"
              c:identifier="gtk_sheet_entry_signal_connect_changed">
        <doc xml:space="preserve">Connect a handler to the sheet_entry "changed" signal. The
user_data argument of the handler will be filled with the
#GtkSheet.
 
This function is mainly used to synchronize a second entry
widget with the sheet_entry.
 
This function is necessary, because not all possible entry
widgets implement the GtkEditable interface yet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the handler id</doc>
          <type name="gulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="handler" transfer-ownership="none" scope="notified">
            <doc xml:space="preserve">the signal handler</doc>
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
        </parameters>
      </method>
      <method name="entry_signal_disconnect_by_func"
              c:identifier="gtk_sheet_entry_signal_disconnect_by_func">
        <doc xml:space="preserve">Disconnect a handler from the sheet_entry "changed" signal
 
This function is mainly used to synchronize a second entry
widget with the sheet_entry.
 
This function is necessary, because not all possible entry
widgets implement the GtkEditable interface yet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="handler" transfer-ownership="none" scope="call">
            <doc xml:space="preserve">the signal handler</doc>
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
        </parameters>
      </method>
      <method name="freeze" c:identifier="gtk_sheet_freeze">
        <doc xml:space="preserve">Freeze all visual updates of the #GtkSheet.
The updates will occure in a more efficient way than if you made them on a unfrozen #GtkSheet .</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_active_cell" c:identifier="gtk_sheet_get_active_cell">
        <doc xml:space="preserve">Store the coordinates of the active cell in row,col.
If (row&lt;0 || col&lt;0) then there was no active cell in the
sheet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attributes" c:identifier="gtk_sheet_get_attributes">
        <doc xml:space="preserve">Gett cell attributes of the given cell.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE means that the cell is currently allocated.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="attributes" transfer-ownership="none">
            <doc xml:space="preserve">#GtkSheetCellAttr of the given range</doc>
            <type name="SheetCellAttr" c:type="GtkSheetCellAttr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cell_area" c:identifier="gtk_sheet_get_cell_area">
        <doc xml:space="preserve">Get area of a given cell.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE(success) or FALSE(failure)</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="area" transfer-ownership="none">
            <doc xml:space="preserve">a #GdkRectangle area of the cell</doc>
            <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_at" c:identifier="gtk_sheet_get_child_at">
        <doc xml:space="preserve">Get the child attached at @row,@col.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the #GtkSheetChild attached to @row,@col or NULL</doc>
          <type name="SheetChild" c:type="const GtkSheetChild*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_title"
              c:identifier="gtk_sheet_get_column_title">
        <doc xml:space="preserve">Get column title.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">column title, do not modify or free it.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_width"
              c:identifier="gtk_sheet_get_column_width">
        <doc xml:space="preserve">Get column width.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">column width</doc>
          <type name="gint" c:type="const gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_columns_count"
              c:identifier="gtk_sheet_get_columns_count">
        <doc xml:space="preserve">Get the number of the columns of the #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">number of columns.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description" c:identifier="gtk_sheet_get_description">
        <doc xml:space="preserve">Get sheet description.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">sheet description or NULL, do not modify or free it</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve">#GtkSheet description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_entry" c:identifier="gtk_sheet_get_entry">
        <doc xml:space="preserve">Get sheet's entry widget.
 
If the entry widget is a container, the direct childs of the
container are searched for a valid entry widget. If you want
the container itself to be returned, you should use
#gtk_sheet_get_entry_widget() instead.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a #GtkWidget or NULL</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entry_text" c:identifier="gtk_sheet_get_entry_text">
        <doc xml:space="preserve">Get the text out of the sheet_entry.
 
This function is mainly used to synchronize the text of a
second entry with the sheet_entry.
 
This function is necessary, because not all possible entry
widgets implement the GtkEditable interface yet.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a copy of the sheet_entry text or NULL. This
function returns an allocated string, so g_free() it after
usage!</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entry_type" c:identifier="gtk_sheet_get_entry_type">
        <doc xml:space="preserve">Get sheets entry type, if known</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a #GtkSheetEntryType or GTK_SHEET_ENTRY_TYPE_DEFAULT</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entry_widget"
              c:identifier="gtk_sheet_get_entry_widget">
        <doc xml:space="preserve">Get sheet's entry widget.
 
If the entry widget is a container, the container widget is
returned. In order to get the entry in the container child,
you might want to use #gtk_sheet_get_entry() instead.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a #GtkWidget or NULL</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hadjustment" c:identifier="gtk_sheet_get_hadjustment">
        <doc xml:space="preserve">Get horizontal scroll adjustments.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a #GtkAdjustment</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_link" c:identifier="gtk_sheet_get_link">
        <doc xml:space="preserve">Get link pointer from a cell.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">pointer linked to the cell</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pixel_info" c:identifier="gtk_sheet_get_pixel_info">
        <doc xml:space="preserve">Get row and column correspondig to the given position within
the sheet.
 
In order to decode clicks into to title area correctly, pass
the GdkWindow from the button event. Omitting the
window (NULL) defaults to the sheet window.
 
row and column may return values in the range [-1 .. max+1]
depending on wether the position lies within the title area,
the sheet cell area or beyond the outermost row/column.
 
All 9 sheet areas can be reliably determined by evaluating
the returned row/column values (title area/cell
area/outside).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE if the position lies within the sheet cell area
or FALSE when outside (title area f.e.)</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="window" transfer-ownership="none">
            <doc xml:space="preserve">base window for coordinates (null)</doc>
            <type name="Gdk.Window" c:type="GdkWindow*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve">x coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve">y coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">cell row number</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">cell column number</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_row_title" c:identifier="gtk_sheet_get_row_title">
        <doc xml:space="preserve">Get row title.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a pointer to the row title or NULL.
Do not modify or free it.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_rows_count" c:identifier="gtk_sheet_get_rows_count">
        <doc xml:space="preserve">Get the number of the rows of the #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">number of rows.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selection" c:identifier="gtk_sheet_get_selection">
        <doc xml:space="preserve">Inquire current cell selection state and range.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE: there is a selection, FALSE: no selection or error</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve">where to store the #GtkSheetState, may be NULL</doc>
            <type name="SheetState" c:type="GtkSheetState*"/>
          </parameter>
          <parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve">where to store the #GtkSheetRange</doc>
            <type name="SheetRange" c:type="GtkSheetRange*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="gtk_sheet_get_state">
        <doc xml:space="preserve">Get the selection state of the sheet (#GtkSheetState).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">GTK_SHEET_NORMAL,GTK_SHEET_ROW_SELECTED,GTK_SHEET_COLUMN_SELECTED,GTK_SHEET_RANGE_SELECTED</doc>
          <type name="SheetState" c:type="GtkSheetState"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tooltip_markup"
              c:identifier="gtk_sheet_get_tooltip_markup">
        <doc xml:space="preserve">Gets the contents of the tooltip (markup) for sheet</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the tooltip text, or NULL. You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tooltip_text"
              c:identifier="gtk_sheet_get_tooltip_text">
        <doc xml:space="preserve">Gets the contents of the tooltip for the #GtkSheet</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the tooltip text, or NULL. You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vadjustment" c:identifier="gtk_sheet_get_vadjustment">
        <doc xml:space="preserve">Get vertical scroll adjustments.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">a #GtkAdjustment</doc>
          <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_range"
              c:identifier="gtk_sheet_get_visible_range">
        <doc xml:space="preserve">Get sheet's ranges in a #GkSheetRange structure.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve">a selected #GtkSheetRange
struct _GtkSheetRange { gint row0,col0; //  upper-left cell
			  gint rowi,coli;  // lower-right cell  };</doc>
            <type name="SheetRange" c:type="GtkSheetRange*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_vjustification"
              c:identifier="gtk_sheet_get_vjustification">
        <doc xml:space="preserve">Get the default vertical cell text justification from
#GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">the default #GtkSheetVerticalJustification</doc>
          <type name="SheetVerticalJustification"
                c:type="GtkSheetVerticalJustification"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="grid_visible" c:identifier="gtk_sheet_grid_visible">
        <doc xml:space="preserve">Gets the visibility of grid in #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE(grid visible) or FALSE(grid invisible)</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hide_column_titles"
              c:identifier="gtk_sheet_hide_column_titles">
        <doc xml:space="preserve">Hide column titles .</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hide_row_titles" c:identifier="gtk_sheet_hide_row_titles">
        <doc xml:space="preserve">Hide row titles .</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="in_clip" c:identifier="gtk_sheet_in_clip">
        <doc xml:space="preserve">Get the clip status of #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_columns" c:identifier="gtk_sheet_insert_columns">
        <doc xml:space="preserve">Insert @ncols columns before the given row and pull right.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="ncols" transfer-ownership="none">
            <doc xml:space="preserve">number of columns to be inserted.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_rows" c:identifier="gtk_sheet_insert_rows">
        <doc xml:space="preserve">Insert @nrows rows before the given row and pull right.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="nrows" transfer-ownership="none">
            <doc xml:space="preserve">number of rows to be inserted.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_frozen" c:identifier="gtk_sheet_is_frozen">
        <doc xml:space="preserve">Get freeze status.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE wether the sheet is frozen</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">the #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="justify_entry" c:identifier="gtk_sheet_justify_entry">
        <doc xml:space="preserve">Get the cell entry editor justification setting from
#GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="link_cell" c:identifier="gtk_sheet_link_cell">
        <doc xml:space="preserve">Link pointer to a cell.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="link" transfer-ownership="none">
            <doc xml:space="preserve">pointer linked to the cell</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="locked" c:identifier="gtk_sheet_locked">
        <doc xml:space="preserve">Get the lock status of #GtkSheet, locked means the sheet is
not editable, cell contents cannot be modified by the user.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="move_child" c:identifier="gtk_sheet_move_child">
        <doc xml:space="preserve">Move widgets added with gtk_sheet_put() in the sheet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve">#GtkWidget to be put.</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve">x coord at which we move the widget.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve">y coord at which we move the widget.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="moveto" c:identifier="gtk_sheet_moveto">
        <doc xml:space="preserve">Scroll the viewing area of the sheet to the given column and row;
 
row_align and col_align are between 0-1 representing the location
the row should appear on the screnn, 0 being top or left,
1 being bottom or right.

passing row_align/col_align of -1 will suppress movement in
that direction.
 
if row or column is negative then there is no change</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="row_align" transfer-ownership="none">
            <doc xml:space="preserve">row alignment</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col_align" transfer-ownership="none">
            <doc xml:space="preserve">column alignment</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="put" c:identifier="gtk_sheet_put">
        <doc xml:space="preserve">Add widgets to the sheet.
The widget is floating in one given position (x,y) regardless of the configurations of rows/columns.
This means that cells do not resize depending on the widgets' size.
You can resize it yourself or use gtk_sheet_attach_*()
You may remove it with gtk_container_remove(GTK_CONTAINER(sheet), GtkWidget *child);</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE means that the cell is currently allocated.</doc>
          <type name="SheetChild" c:type="GtkSheetChild*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve">GtkWidget to be put</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve">x coordinate where we put the widget</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve">y coordinate where we put the widget</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_clear" c:identifier="gtk_sheet_range_clear">
        <doc xml:space="preserve">Clear range contents. If range==NULL the whole sheet will be cleared.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_delete" c:identifier="gtk_sheet_range_delete">
        <doc xml:space="preserve">Clear range contents and remove links.
FIXME:: if range==NULL whole sheet is deleted?</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_set_background"
              c:identifier="gtk_sheet_range_set_background">
        <doc xml:space="preserve">Set background color of the given range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="urange" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange.</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">a #GdkRGBA.</doc>
            <type name="Gdk.RGBA" c:type="const GdkRGBA*"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_set_border"
              c:identifier="gtk_sheet_range_set_border"
              introspectable="0">
        <doc xml:space="preserve">Set cell border style in the given range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="urange" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange where we set border style.</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
          <parameter name="mask" transfer-ownership="none">
            <doc xml:space="preserve">CELL_LEFT_BORDER, CELL_RIGHT_BORDER,
     CELL_TOP_BORDER,CELL_BOTTOM_BORDER</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve">width of the border line in pixels</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="cap_style" transfer-ownership="none">
            <doc xml:space="preserve">see cairo_set_line_cap()</doc>
            <type c:type="cairo_line_cap_t"/>
          </parameter>
          <parameter name="join_style" transfer-ownership="none">
            <doc xml:space="preserve">see cairo_set_line_join()</doc>
            <type c:type="cairo_line_join_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_set_border_color"
              c:identifier="gtk_sheet_range_set_border_color">
        <doc xml:space="preserve">Set border color for the given range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="urange" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange where we set border color.</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">a #GdkRGBA.</doc>
            <type name="Gdk.RGBA" c:type="const GdkRGBA*"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_set_editable"
              c:identifier="gtk_sheet_range_set_editable">
        <doc xml:space="preserve">Set if cell contents can be edited or not in the given range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="urange" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
          <parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_set_font" c:identifier="gtk_sheet_range_set_font">
        <doc xml:space="preserve">Set font_desc for the given range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="urange" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange where we set font_desc.</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
          <parameter name="font_desc" transfer-ownership="none">
            <doc xml:space="preserve">a #PangoFontDescription.</doc>
            <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_set_foreground"
              c:identifier="gtk_sheet_range_set_foreground">
        <doc xml:space="preserve">Set foreground color of the given range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="urange" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange.</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">a #GdkRGBA.</doc>
            <type name="Gdk.RGBA" c:type="const GdkRGBA*"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_set_justification"
              c:identifier="gtk_sheet_range_set_justification">
        <doc xml:space="preserve">Set text justification (GTK_JUSTIFY_LEFT, RIGHT, CENTER) of the given range.
The default value is GTK_JUSTIFY_LEFT. If autoformat is on, the default justification for numbers is GTK_JUSTIFY_RIGHT.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="urange" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange.</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
          <parameter name="just" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkJustification : GTK_JUSTIFY_LEFT, RIGHT, CENTER.</doc>
            <type name="Gtk.Justification" c:type="GtkJustification"/>
          </parameter>
        </parameters>
      </method>
      <method name="range_set_visible"
              c:identifier="gtk_sheet_range_set_visible">
        <doc xml:space="preserve">Set if cell contents are visible or not in the given range: accepted values are TRUE or FALSE.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="urange" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange.</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_link" c:identifier="gtk_sheet_remove_link">
        <doc xml:space="preserve">Remove link pointer from a cell.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_button_add_label"
              c:identifier="gtk_sheet_row_button_add_label">
        <doc xml:space="preserve">Set button label.It is used to set a row title.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="label" transfer-ownership="none">
            <doc xml:space="preserve">text label</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_button_get_label"
              c:identifier="gtk_sheet_row_button_get_label">
        <doc xml:space="preserve">Get a row button label.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">In case of succes , a pointer to label
text.Otherwise NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_button_justify"
              c:identifier="gtk_sheet_row_button_justify">
        <doc xml:space="preserve">Set the justification(alignment) of the row buttons.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="justification" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkJustification :GTK_JUSTIFY_LEFT, RIGHT,
 			 CENTER</doc>
            <type name="Gtk.Justification" c:type="GtkJustification"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_get_tooltip_markup"
              c:identifier="gtk_sheet_row_get_tooltip_markup">
        <doc xml:space="preserve">Gets the contents of the tooltip (markup) for the column</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the tooltip text, or NULL. You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_get_tooltip_text"
              c:identifier="gtk_sheet_row_get_tooltip_text">
        <doc xml:space="preserve">Gets the contents of the tooltip for the column</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the tooltip text, or NULL. You should free the
         returned string with g_free() when done.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_label_set_visibility"
              c:identifier="gtk_sheet_row_label_set_visibility">
        <doc xml:space="preserve">Set row label visibility.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_sensitive" c:identifier="gtk_sheet_row_sensitive">
        <doc xml:space="preserve">Get row button sensitivity.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE - is sensitive,
FALSE - insensitive or not existant</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_set_sensitivity"
              c:identifier="gtk_sheet_row_set_sensitivity">
        <doc xml:space="preserve">Set row button sensitivity. If sensitivity is TRUE can be toggled, otherwise it acts as a title .</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_set_tooltip_markup"
              c:identifier="gtk_sheet_row_set_tooltip_markup">
        <doc xml:space="preserve">Sets markup as the contents of the tooltip, which is marked
up with the Pango text markup language.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="markup" transfer-ownership="none">
            <doc xml:space="preserve">the contents of the tooltip for widget, or NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_set_tooltip_text"
              c:identifier="gtk_sheet_row_set_tooltip_text">
        <doc xml:space="preserve">Sets text as the contents of the tooltip.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row index</doc>
            <type name="gint" c:type="const gint"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve">the contents of the tooltip for widget</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_set_visibility"
              c:identifier="gtk_sheet_row_set_visibility">
        <doc xml:space="preserve">Set row visibility. The default value is TRUE. If FALSE, the row is hidden.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="row_titles_visible"
              c:identifier="gtk_sheet_row_titles_visible">
        <doc xml:space="preserve">Get the visibility of row column titles .</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="row_visible" c:identifier="gtk_sheet_row_visible">
        <doc xml:space="preserve">Get row visibility.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE - is visible
FALSE - invisible or not existant</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="rows_labels_set_visibility"
              c:identifier="gtk_sheet_rows_labels_set_visibility">
        <doc xml:space="preserve">Set all rows label visibility. The sheet itself
has no such property, this is a convenience function to set
the property for all existing rows.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="rows_resizable" c:identifier="gtk_sheet_rows_resizable">
        <doc xml:space="preserve">Get rows resizable status.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">TRUE or FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="rows_set_resizable"
              c:identifier="gtk_sheet_rows_set_resizable">
        <doc xml:space="preserve">Set rows resizable status.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="resizable" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="rows_set_sensitivity"
              c:identifier="gtk_sheet_rows_set_sensitivity">
        <doc xml:space="preserve">Set rows buttons sensitivity. If sensitivity is TRUE button
can be toggled, otherwise act as titles. The sheet itself
has no such property, it is a convenience function to set the
property for all existing rows.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="sensitive" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_column" c:identifier="gtk_sheet_select_column">
        <doc xml:space="preserve">Select the column. The range is then highlighted, and the bounds are stored in sheet-&gt;range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_range" c:identifier="gtk_sheet_select_range">
        <doc xml:space="preserve">Highlight the selected range and store bounds in sheet-&gt;range</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="range" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetRange</doc>
            <type name="SheetRange" c:type="const GtkSheetRange*"/>
          </parameter>
        </parameters>
      </method>
      <method name="select_row" c:identifier="gtk_sheet_select_row">
        <doc xml:space="preserve">Select the row. The range is then highlighted, and the bounds are stored in sheet-&gt;range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_active_cell" c:identifier="gtk_sheet_set_active_cell">
        <doc xml:space="preserve">Set active cell where the cell entry will be displayed.
Use (row,col) = (-1,-1) to deactivate active cell.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">FALSE if current cell can't be deactivated or
requested cell can't be activated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_autoresize" c:identifier="gtk_sheet_set_autoresize">
        <doc xml:space="preserve">Controls wether cells will be autoresized upon deactivation,
as you type text or set a cell_text value. If you want the
cells to be autoresized when you pack widgets look at
gtk_sheet_attach_*(). This function sets both:
autoresize_columns and autoresize_cells.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="autoresize" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_autoresize_columns"
              c:identifier="gtk_sheet_set_autoresize_columns">
        <doc xml:space="preserve">Controls wether columns will be autoresized upon
deactivation, as you type text or set a cell_text value. If
you want the cells to be autoresized when you pack widgets
look at gtk_sheet_attach_*().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="autoresize" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_autoresize_rows"
              c:identifier="gtk_sheet_set_autoresize_rows">
        <doc xml:space="preserve">Controls wether rows will be autoresized upon deactivation,
as you type text or set a cell_text value. If you want the
cells to be autoresized when you pack widgets look at
gtk_sheet_attach_*().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="autoresize" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_autoscroll" c:identifier="gtk_sheet_set_autoscroll">
        <doc xml:space="preserve">The sheet will be automatically scrolled when you move beyond
the last row/col in #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="autoscroll" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background" c:identifier="gtk_sheet_set_background">
        <doc xml:space="preserve">Sets the background color of the #GtkSheet.
If pass NULL, the sheet will be reset to the default color.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">a #GdkRGBA structure</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cell" c:identifier="gtk_sheet_set_cell">
        <doc xml:space="preserve">Set cell contents and allocate memory if needed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row_number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="justification" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkJustification :GTK_JUSTIFY_LEFT, RIGHT, CENTER</doc>
            <type name="Gtk.Justification" c:type="GtkJustification"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve">cell text</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cell_text" c:identifier="gtk_sheet_set_cell_text">
        <doc xml:space="preserve">Set cell contents and allocate memory if needed. No
justifcation is made. attributes and links remain unchanged.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row_number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve">cell text</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clip_text" c:identifier="gtk_sheet_set_clip_text">
        <doc xml:space="preserve">Clip text in cell. When clip text mode is turned off, cell
text is written over neighbour columns, as long as their
contents are empty.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="clip_text" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_title"
              c:identifier="gtk_sheet_set_column_title">
        <doc xml:space="preserve">Set column title.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve">column title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_titles_height"
              c:identifier="gtk_sheet_set_column_titles_height">
        <doc xml:space="preserve">Resize column titles area .</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve">column title height.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_width"
              c:identifier="gtk_sheet_set_column_width">
        <doc xml:space="preserve">Set column width.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve">the width of the column.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description" c:identifier="gtk_sheet_set_description">
        <doc xml:space="preserve">Set  #GtkSheet description for application use.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve">#GtkSheet description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_entry_editable"
              c:identifier="gtk_sheet_set_entry_editable">
        <doc xml:space="preserve">Set the editable flag in the sheet_entry
 
This function is mainly used to synchronize the editable flag
of a second entry with the sheet_entry.
 
This function is necessary, because not all possible entry
widgets implement the GtkEditable interface yet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve">editable flag</doc>
            <type name="gboolean" c:type="const gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_entry_text" c:identifier="gtk_sheet_set_entry_text">
        <doc xml:space="preserve">Set the text in the sheet_entry (and active cell).
 
This function is mainly used to synchronize the text of a
second entry with the sheet_entry.
 
This function is necessary, because not all possible entry
widgets implement the GtkEditable interface yet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve">the text to be set or NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_grid" c:identifier="gtk_sheet_set_grid">
        <doc xml:space="preserve">Set the grid color.
If pass NULL, the grid will be reset to the default color.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve">a #GdkRGBA structure</doc>
            <type name="Gdk.RGBA" c:type="GdkRGBA*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_hadjustment" c:identifier="gtk_sheet_set_hadjustment">
        <doc xml:space="preserve">Change horizontal scroll adjustments.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="adjustment" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkAdjustment</doc>
            <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_justify_entry"
              c:identifier="gtk_sheet_set_justify_entry">
        <doc xml:space="preserve">Justify cell entry editor in #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="justify" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_locked" c:identifier="gtk_sheet_set_locked">
        <doc xml:space="preserve">Lock the #GtkSheet, which means it is no longer editable,
cell contents cannot be modified by the user.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="locked" transfer-ownership="none">
            <doc xml:space="preserve">TRUE or FALSE</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_height" c:identifier="gtk_sheet_set_row_height">
        <doc xml:space="preserve">Set row height.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve">row height(in pixels).</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_title" c:identifier="gtk_sheet_set_row_title">
        <doc xml:space="preserve">Set row title.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve">row title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_titles_width"
              c:identifier="gtk_sheet_set_row_titles_width">
        <doc xml:space="preserve">Resize row titles area.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve">row titles width.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selection_mode"
              c:identifier="gtk_sheet_set_selection_mode">
        <doc xml:space="preserve">Sets the selection mode of the cells in a #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve">GTK_SELECTION_SINGLE or GTK_SELECTION_BROWSE</doc>
            <type name="Gtk.SelectionMode" c:type="GtkSelectionMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tab_direction"
              c:identifier="gtk_sheet_set_tab_direction"
              version="3.0.2">
        <doc xml:space="preserve">Sets a primary movement direction to the Tab, Return and
Enter keys, and assigns the opposite direction to the same
keys with GDK_SHIFT_MASK.
 
Transposed movement direction can be accessed with
GTK_SHEET_MOD_MASK|GDK_CONTROL_MASK and
GTK_SHEET_MOD_MASK|GDK_CONTROL_MASK|GDK_SHIFT_MASK.
 
All bindings are defined for the #GtkSheetClass, so all sheet
instances use the same movement directions.
 
Default: GTK_DIR_TAB_FORWARD.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="dir" transfer-ownership="none">
            <doc xml:space="preserve">the primary tab direction</doc>
            <type name="Gtk.DirectionType" c:type="GtkDirectionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title" c:identifier="gtk_sheet_set_title">
        <doc xml:space="preserve">Set  #GtkSheet title. The widget will keep a copy of the
string.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve">#GtkSheet title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tooltip_markup"
              c:identifier="gtk_sheet_set_tooltip_markup">
        <doc xml:space="preserve">Sets markup as the contents of the tooltip, which is marked
up with the Pango text markup language.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="markup" transfer-ownership="none">
            <doc xml:space="preserve">the contents of the tooltip for widget, or NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tooltip_text"
              c:identifier="gtk_sheet_set_tooltip_text">
        <doc xml:space="preserve">Sets text as the contents of the tooltip.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve">the contents of the tooltip for widget</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vadjustment" c:identifier="gtk_sheet_set_vadjustment">
        <doc xml:space="preserve">Change vertical scroll adjustments.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="adjustment" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkAdjustment</doc>
            <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vjustification"
              c:identifier="gtk_sheet_set_vjustification">
        <doc xml:space="preserve">Set the default vertical cell text justification for
#GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="vjust" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheetVerticalJustification</doc>
            <type name="SheetVerticalJustification"
                  c:type="GtkSheetVerticalJustification"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_column_titles"
              c:identifier="gtk_sheet_show_column_titles">
        <doc xml:space="preserve">Show column titles .</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="show_grid" c:identifier="gtk_sheet_show_grid">
        <doc xml:space="preserve">Sets the visibility of grid in #GtkSheet.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
          <parameter name="show" transfer-ownership="none">
            <doc xml:space="preserve">TRUE(grid visible) or FALSE(grid invisible)</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_row_titles" c:identifier="gtk_sheet_show_row_titles">
        <doc xml:space="preserve">Show row titles .</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="thaw" c:identifier="gtk_sheet_thaw">
        <doc xml:space="preserve">Thaw the sheet after you have made a number of changes on a frozen sheet.
The updates will occure in a more efficient way than if you made them on a unfrozen sheet .</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unclip_range" c:identifier="gtk_sheet_unclip_range">
        <doc xml:space="preserve">Free clipboard.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet.</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unselect_range" c:identifier="gtk_sheet_unselect_range">
        <doc xml:space="preserve">Unselect the current selected range and clears the bounds in sheet-&gt;range.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="sheet" transfer-ownership="none">
            <doc xml:space="preserve">a #GtkSheet</doc>
            <type name="Sheet" c:type="GtkSheet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="autoresize"
                deprecated="1"
                deprecated-version="3.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Autoreisize cells while typing (rows and columns)</doc>
        <doc-deprecated xml:space="preserve">use autoresize-rows, autoresize-columns
instead</doc-deprecated>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="autoresize-cols" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Autoreisize columns while typing</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="autoresize-rows" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Autoreisize rows while typing</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="autoscroll" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The sheet will be automatically scrolled when you move beyond
the last visible row/column</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="bgcolor" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Background color of the sheet</doc>
        <type name="Gdk.RGBA"/>
      </property>
      <property name="clip-text" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Clip text in cells</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="col-titles-height"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Height of the column titles</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="col-titles-visible"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Visibility of the column titles</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="columns-resizable"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Columns resizable</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="description" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The sheets description, a place to store further information
for application use</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="entry-type"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Sheet cell entry widget type</doc>
        <type/>
      </property>
      <property name="grid-color" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Color of the grid</doc>
        <type name="Gdk.RGBA"/>
      </property>
      <property name="grid-visible" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Sets the visibility of grid</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="justify-entry" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="locked" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">If the sheet ist locked, it is not editable, cell contents
cannot be modified by the user.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="n-rows" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Number of rows in the sheet</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="row-titles-visible"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Row titles visible</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="row-titles-width" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Width of the row title area</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="rows-resizable" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Rows resizable</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="selection-mode" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Sets the selection mode of the cells in a #GtkSheet</doc>
        <type name="Gtk.SelectionMode"/>
      </property>
      <property name="title" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The sheets title string</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="vjust"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Default vertical cell text justification</doc>
        <type/>
      </property>
      <field name="container">
        <type name="Gtk.Container" c:type="GtkContainer"/>
      </field>
      <field name="flags">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="selection_mode">
        <type name="Gtk.SelectionMode" c:type="GtkSelectionMode"/>
      </field>
      <field name="autoresize_columns">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="autoresize_rows">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="autoscroll">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="clip_text">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="justify_entry">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="locked">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="freeze_count">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="bg_color">
        <type name="Gdk.RGBA" c:type="GdkRGBA"/>
      </field>
      <field name="grid_color">
        <type name="Gdk.RGBA" c:type="GdkRGBA"/>
      </field>
      <field name="tm_color">
        <type name="Gdk.RGBA" c:type="GdkRGBA"/>
      </field>
      <field name="show_grid">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="children">
        <type name="GLib.List" c:type="GList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="internal_allocation">
        <type name="Gdk.Rectangle" c:type="GdkRectangle"/>
      </field>
      <field name="title">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="row">
        <type name="SheetRow" c:type="GtkSheetRow*"/>
      </field>
      <field name="column">
        <type name="SheetColumn" c:type="GtkSheetColumn**"/>
      </field>
      <field name="rows_resizable">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="columns_resizable">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="maxrow">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="maxcol">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="view">
        <type name="SheetRange" c:type="GtkSheetRange"/>
      </field>
      <field name="data">
        <type name="SheetCell" c:type="GtkSheetCell***"/>
      </field>
      <field name="maxallocrow">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="maxalloccol">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="active_cell">
        <type name="SheetCell" c:type="GtkSheetCell"/>
      </field>
      <field name="sheet_entry">
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </field>
      <field name="entry_type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="installed_entry_type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="selection_cell">
        <type name="SheetCell" c:type="GtkSheetCell"/>
      </field>
      <field name="timer">
        <type name="gint32" c:type="gint32"/>
      </field>
      <field name="clip_timer">
        <type name="gint32" c:type="gint32"/>
      </field>
      <field name="interval">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="button">
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </field>
      <field name="state">
        <type name="SheetState" c:type="GtkSheetState"/>
      </field>
      <field name="range">
        <type name="SheetRange" c:type="GtkSheetRange"/>
      </field>
      <field name="sheet_window">
        <type name="Gdk.Window" c:type="GdkWindow*"/>
      </field>
      <field name="sheet_window_width">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="sheet_window_height">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="bsurf">
        <type name="cairo.Surface" c:type="cairo_surface_t*"/>
      </field>
      <field name="bsurf_width">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="bsurf_height">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="bsurf_cr">
        <type name="cairo.Context" c:type="cairo_t*"/>
      </field>
      <field name="hoffset">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="voffset">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="old_hadjustment">
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="old_vadjustment">
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="shadow_type">
        <type name="Gtk.ShadowType" c:type="GtkShadowType"/>
      </field>
      <field name="vjust">
        <type name="SheetVerticalJustification"
              c:type="GtkSheetVerticalJustification"/>
      </field>
      <field name="column_title_area">
        <type name="Gdk.Rectangle" c:type="GdkRectangle"/>
      </field>
      <field name="column_title_window">
        <type name="Gdk.Window" c:type="GdkWindow*"/>
      </field>
      <field name="column_titles_visible">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="row_title_area">
        <type name="Gdk.Rectangle" c:type="GdkRectangle"/>
      </field>
      <field name="row_title_window">
        <type name="Gdk.Window" c:type="GdkWindow*"/>
      </field>
      <field name="row_titles_visible">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="hadjustment">
        <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
      </field>
      <field name="vadjustment">
        <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
      </field>
      <field name="hscroll_policy" bits="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="vscroll_policy" bits="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="cursor_drag">
        <type name="Gdk.Cursor" c:type="GdkCursor*"/>
      </field>
      <field name="x_drag">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y_drag">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="drag_cell">
        <type name="SheetCell" c:type="GtkSheetCell"/>
      </field>
      <field name="drag_range">
        <type name="SheetRange" c:type="GtkSheetRange"/>
      </field>
      <field name="clip_range">
        <type name="SheetRange" c:type="GtkSheetRange"/>
      </field>
      <glib:signal name="activate" when="last">
        <doc xml:space="preserve">Emmited whenever a cell is activated(you click on it).
 
FIXME:: The return value is ignored (not yet implemented).</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number of activated cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number of activated cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="changed" when="last">
        <doc xml:space="preserve">"Emited when typing into the active cell, changing its content.
It is emitted after each key press in cell and after deactivating cell.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number of changed cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number of changed cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="clear-cell" when="last">
        <doc xml:space="preserve">Emited when when the content of the cell is erased.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number of cleared cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number of cleared cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="clip-range" when="last">
        <doc xml:space="preserve">Emmited when a #GtkSheetRange is clipping.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="clip_range" transfer-ownership="none">
            <doc xml:space="preserve">the newly selected #GtkSheetRange</doc>
            <type name="SheetRange"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="deactivate" when="last">
        <doc xml:space="preserve">Emmited whenever a cell is deactivated(you click on other
cell or start a new selection).
 
The signal handler must return TRUE in order to allow
deactivation, FALSE to deny deactivation.</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number of deactivated cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number of deactivated cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="enter-pressed" when="last">
        <doc xml:space="preserve">This signal intercepts RETURN and ENTER key-press-events
before they are processed by the sheet-entry editor. Any
modifier combinations on these keys may trigger the signal.
 
The default behaviour of the sheet-entry editor is to move
the active cell, which might not be appropriate for the type
of application.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE to block the sheet-entry from processing
  the event. %FALSE to propagate the event to the
  sheet-entry.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve">the #GdkEventKey which triggered this signal.</doc>
            <type name="Gdk.EventKey"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="entry-focus-in" when="last" version="3.0.1">
        <doc xml:space="preserve">The ::entry-focus-in signal will be emitted when the keyboard
focus enters the sheet_entry editor.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE to stop other handlers from being invoked for the event.
  %FALSE to propagate the event further.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve">the #GdkEventFocus which triggered this signal</doc>
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="entry-focus-out" when="last" version="3.0.1">
        <doc xml:space="preserve">The ::entry-focus-out signal will be emitted when the
keyboard focus leaves the sheet_entry editor.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">%TRUE to stop other handlers from being invoked for the event.
  %FALSE to propagate the event further.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve">the #GdkEventFocus which triggered this signal</doc>
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="move-cursor" when="last" action="1" version="3.0.2">
        <doc xml:space="preserve">The ::move-cursor signal is a keybinding signal which gets
 emitted when the user initiates a cursor movement.
 
 Applications should not connect to it, but may emit it with
g_signal_emit_by_name() if they need to control the cursor
programmatically.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="step" transfer-ownership="none">
            <doc xml:space="preserve">the granularity of the move, as a #GtkMovementStep</doc>
            <type name="Gtk.MovementStep"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve">the number of @step units to move</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="extend_selection" transfer-ownership="none">
            <doc xml:space="preserve">%TRUE if the move should extend the selection</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="move-range" when="last">
        <doc xml:space="preserve">Emmited when a #GtkSheetRange is moved.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="old_range" transfer-ownership="none">
            <doc xml:space="preserve">the previous selected #GtkSheetRange.</doc>
            <type name="SheetRange"/>
          </parameter>
          <parameter name="new_range" transfer-ownership="none">
            <doc xml:space="preserve">the newly selected #GtkSheetRange.</doc>
            <type name="SheetRange"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="new-column-width" when="last">
        <doc xml:space="preserve">Emited when the width of a column is modified.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="col" transfer-ownership="none">
            <doc xml:space="preserve">modified column number.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve">new column width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="new-row-height" when="last">
        <doc xml:space="preserve">Emited when the height of a row is modified.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">modified row number.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve">new row height.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="populate-popup" when="last" version="3.0.1">
        <doc xml:space="preserve">The ::populate-popup signal will be emitted when the user
activates the popup menu of the sheet_entry editor.
 
The emission of this signal is only supported for #GtkEntry,
#GtkDataEntry, #GtkItemEntry and #GtkTextView.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="menu" transfer-ownership="none">
            <doc xml:space="preserve">the menu that ist being populated</doc>
            <type name="Gtk.Menu"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="resize-range" when="last">
        <doc xml:space="preserve">Emmited when a #GtkSheetRange is resized.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="old_range" transfer-ownership="none">
            <doc xml:space="preserve">the previous selected #GtkSheetRange.</doc>
            <type name="SheetRange"/>
          </parameter>
          <parameter name="new_range" transfer-ownership="none">
            <doc xml:space="preserve">the newly selected #GtkSheetRange.</doc>
            <type name="SheetRange"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="select-column" when="last">
        <doc xml:space="preserve">Emmited when a column has been selected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="select_column" transfer-ownership="none">
            <doc xml:space="preserve">the newly selected column index</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="select-range" when="last">
        <doc xml:space="preserve">Emmited when a #GtkSheetRange has been selected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="select_range" transfer-ownership="none">
            <doc xml:space="preserve">the newly selected #GtkSheetRange</doc>
            <type name="SheetRange"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="select-row" when="last">
        <doc xml:space="preserve">Emmited when a row has been selected.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">the newly selected row index</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="set-cell" when="last">
        <doc xml:space="preserve">Emited when clicking on a non-empty cell.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="row" transfer-ownership="none">
            <doc xml:space="preserve">row number of activated cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="column" transfer-ownership="none">
            <doc xml:space="preserve">column number of activated cell.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="traverse" when="last">
        <doc xml:space="preserve">The "traverse" is emited before "deactivate" and allows to
veto the movement. In such case, the entry will remain in the
site and the other signals will not be emited.
 
The signal handler must return TRUE to allow the movement,
FALSE to veto the movement.</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="p2" transfer-ownership="none">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <enumeration name="SheetAttrType" c:type="GtkSheetAttrType">
      <member name="foreground" value="0" c:identifier="GTK_SHEET_FOREGROUND">
      </member>
      <member name="background" value="1" c:identifier="GTK_SHEET_BACKGROUND">
      </member>
      <member name="font" value="2" c:identifier="GTK_SHEET_FONT">
      </member>
      <member name="justification"
              value="3"
              c:identifier="GTK_SHEET_JUSTIFICATION">
      </member>
      <member name="border" value="4" c:identifier="GTK_SHEET_BORDER">
      </member>
      <member name="border_color"
              value="5"
              c:identifier="GTK_SHEET_BORDER_COLOR">
      </member>
      <member name="is_editable"
              value="6"
              c:identifier="GTK_SHEET_IS_EDITABLE">
      </member>
      <member name="is_visible" value="7" c:identifier="GTK_SHEET_IS_VISIBLE">
      </member>
    </enumeration>
    <record name="SheetButton" c:type="GtkSheetButton">
      <doc xml:space="preserve">The GtkSheetButton struct contains only private data.
It should only be accessed through the functions described below.</doc>
      <field name="state" readable="0" private="1">
        <type name="Gtk.StateFlags" c:type="GtkStateFlags"/>
      </field>
      <field name="label" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="label_visible" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="child" readable="0" private="1">
        <type name="SheetChild" c:type="GtkSheetChild*"/>
      </field>
      <field name="justification" readable="0" private="1">
        <type name="Gtk.Justification" c:type="GtkJustification"/>
      </field>
    </record>
    <record name="SheetCell" c:type="GtkSheetCell">
      <doc xml:space="preserve">The GtkSheetCell struct contains only private data.
It should only be accessed through the functions described below.</doc>
      <field name="extent" readable="0" private="1">
        <type name="Gdk.Rectangle" c:type="GdkRectangle"/>
      </field>
      <field name="row" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="col" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="attributes" readable="0" private="1">
        <type name="SheetCellAttr" c:type="GtkSheetCellAttr*"/>
      </field>
      <field name="text" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="link" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="tooltip_markup" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="tooltip_text" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <record name="SheetCellAttr" c:type="GtkSheetCellAttr">
      <doc xml:space="preserve">The GtkSheetCellAttr struct contains only private data.
It should only be accessed through the functions described below.</doc>
      <field name="justification" readable="0" private="1">
        <type name="Gtk.Justification" c:type="GtkJustification"/>
      </field>
      <field name="font_desc" readable="0" private="1">
        <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
      </field>
      <field name="foreground" readable="0" private="1">
        <type name="Gdk.RGBA" c:type="GdkRGBA"/>
      </field>
      <field name="background" readable="0" private="1">
        <type name="Gdk.RGBA" c:type="GdkRGBA"/>
      </field>
      <field name="border" readable="0" private="1">
        <type name="SheetCellBorder" c:type="GtkSheetCellBorder"/>
      </field>
      <field name="is_editable" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="is_visible" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="do_font_desc_free" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </record>
    <record name="SheetCellBorder" c:type="GtkSheetCellBorder">
      <doc xml:space="preserve">The GtkSheetCellBorder struct contains only private data.
It should only be accessed through the functions described below.</doc>
      <field name="mask" readable="0" private="1">
        <type name="gint8" c:type="gint8"/>
      </field>
      <field name="width" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="cap_style" introspectable="0" readable="0" private="1">
        <type c:type="cairo_line_cap_t"/>
      </field>
      <field name="join_style" introspectable="0" readable="0" private="1">
        <type c:type="cairo_line_join_t"/>
      </field>
      <field name="color" readable="0" private="1">
        <type name="Gdk.RGBA" c:type="GdkRGBA"/>
      </field>
    </record>
    <record name="SheetChild" c:type="GtkSheetChild">
      <doc xml:space="preserve">The GtkSheetChild struct contains only private data.
It should only be accessed through the functions described below.</doc>
      <field name="widget" readable="0" private="1">
        <type name="Gtk.Widget" c:type="GtkWidget*"/>
      </field>
      <field name="x" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="attached_to_cell" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="floating" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="row" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="col" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="xpadding" readable="0" private="1">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="ypadding" readable="0" private="1">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="xexpand" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="yexpand" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="xshrink" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="yshrink" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="xfill" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="yfill" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </record>
    <record name="SheetClass"
            c:type="GtkSheetClass"
            glib:is-gtype-struct-for="Sheet">
      <field name="parent_class">
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
      <field name="set_scroll_adjustments">
        <callback name="set_scroll_adjustments">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="hadjustment" transfer-ownership="none">
              <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
            </parameter>
            <parameter name="vadjustment" transfer-ownership="none">
              <type name="Gtk.Adjustment" c:type="GtkAdjustment*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="select_row">
        <callback name="select_row">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <doc xml:space="preserve">a #GtkSheet.</doc>
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <doc xml:space="preserve">row number</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="select_column">
        <callback name="select_column">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <doc xml:space="preserve">a #GtkSheet.</doc>
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <doc xml:space="preserve">column number</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="select_range">
        <callback name="select_range">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <doc xml:space="preserve">a #GtkSheet</doc>
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="range" transfer-ownership="none">
              <doc xml:space="preserve">a #GtkSheetRange</doc>
              <type name="SheetRange" c:type="GtkSheetRange*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="clip_range">
        <callback name="clip_range">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <doc xml:space="preserve">a #GtkSheet.</doc>
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="clip_range" transfer-ownership="none">
              <doc xml:space="preserve">#GtkSheetRange to be saved</doc>
              <type name="SheetRange" c:type="GtkSheetRange*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="resize_range">
        <callback name="resize_range">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="old_range" transfer-ownership="none">
              <type name="SheetRange" c:type="GtkSheetRange*"/>
            </parameter>
            <parameter name="new_range" transfer-ownership="none">
              <type name="SheetRange" c:type="GtkSheetRange*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_range">
        <callback name="move_range">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="old_range" transfer-ownership="none">
              <type name="SheetRange" c:type="GtkSheetRange*"/>
            </parameter>
            <parameter name="new_range" transfer-ownership="none">
              <type name="SheetRange" c:type="GtkSheetRange*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="traverse">
        <callback name="traverse">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="new_row" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
            <parameter name="new_column" transfer-ownership="none">
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deactivate">
        <callback name="deactivate">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate">
        <callback name="activate">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_cell">
        <callback name="set_cell">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="clear_cell">
        <callback name="clear_cell">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="changed">
        <callback name="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="column" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="new_column_width">
        <callback name="new_column_width">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="col" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="new_row_height">
        <callback name="new_row_height">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="row" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="focus_in_event">
        <callback name="focus_in_event">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Gdk.EventFocus" c:type="GdkEventFocus*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="focus_out_event">
        <callback name="focus_out_event">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Gdk.EventFocus" c:type="GdkEventFocus*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_cursor">
        <callback name="move_cursor">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="sheet" transfer-ownership="none">
              <type name="Sheet" c:type="GtkSheet*"/>
            </parameter>
            <parameter name="step" transfer-ownership="none">
              <type name="Gtk.MovementStep" c:type="GtkMovementStep"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="extend_selection" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="SheetColumn"
           c:symbol-prefix="sheet_column"
           c:type="GtkSheetColumn"
           parent="Gtk.Widget"
           glib:type-name="GtkSheetColumn"
           glib:get-type="gtk_sheet_column_get_type"
           glib:type-struct="SheetColumnClass">
      <doc xml:space="preserve">The #GtkSheetColumn provides properties for sheet columns.</doc>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <method name="get_index" c:identifier="gtk_sheet_column_get_index">
        <doc xml:space="preserve">find index of @colobj in GtkSheet</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">column index or -1</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="colobj" transfer-ownership="none">
            <doc xml:space="preserve">#GtkSheetColumn to find</doc>
            <type name="SheetColumn" c:type="GtkSheetColumn*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="dataformat" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">a formatting string that controls what you see when the
widget doesn't contain input focus</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="datatype" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">no functionality, a datatype hint for the application because
any widget content is text</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="description" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Description of column contents</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="entry-type"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Column cell entry widget type</doc>
        <type/>
      </property>
      <property name="iskey" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Flag for key columns</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="justification" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Justification of the column</doc>
        <type name="Gtk.Justification"/>
      </property>
      <property name="label" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Label of the column button</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="max-length"
                version="3.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Maximum number orf characters in this column, Zero if no
 maximum.

 This property is passed to the sheet entry editor. It is
 supported for  the following editors: #GtkItemEntry,
 #GtkEntry, #GtkDataTextView</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="max-length-bytes"
                version="3.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Set the maximum length in bytes for the GtkDataEntry. For
details see #gtk_data_entry_set_max_length_bytes.

 This property is passed to the sheet entry editor. It is
 supported for  the following editors: #GtkItemEntry,
 #GtkDataTextView.

Sometimes, systems cannot handle UTF-8 string length
correctly, to overcome this problem, you can use the maximum
string length in bytes. When setting both limits, max-length
 and max-length-bytes, both must be fulfilled.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="position" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">The packing position of the column</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="readonly" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Lock column contents for editing.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="visible" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Visible property for columns</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="vjust"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Column vertical cell text justification</doc>
        <type/>
      </property>
      <property name="width" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Width of the column</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="wrap-mode"
                version="3.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">This property is passed to the sheet entry editor. It is
 supported for  the following editors: #GtkTextView,
 #GtkDataTextView.</doc>
        <type name="Gtk.WrapMode"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Gtk.Widget" c:type="GtkWidget"/>
      </field>
      <field name="sheet" readable="0" private="1">
        <type name="Sheet" c:type="GtkSheet*"/>
      </field>
      <field name="title" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="width" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="requisition" readable="0" private="1">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="left_xpixel" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="max_extent_width" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="button" readable="0" private="1">
        <type name="SheetButton" c:type="GtkSheetButton"/>
      </field>
      <field name="justification" readable="0" private="1">
        <type name="Gtk.Justification" c:type="GtkJustification"/>
      </field>
      <field name="vjust" readable="0" private="1">
        <type name="SheetVerticalJustification"
              c:type="GtkSheetVerticalJustification"/>
      </field>
      <field name="is_key" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="is_readonly" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="data_type" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="data_format" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="description" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="entry_type" readable="0" private="1">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="max_length" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="max_length_bytes" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="wrap_mode" readable="0" private="1">
        <type name="Gtk.WrapMode" c:type="GtkWrapMode"/>
      </field>
    </class>
    <record name="SheetColumnClass"
            c:type="GtkSheetColumnClass"
            glib:is-gtype-struct-for="SheetColumn">
      <field name="parent_class">
        <type name="Gtk.WidgetClass" c:type="GtkWidgetClass"/>
      </field>
    </record>
    <enumeration name="SheetEntryType" c:type="GtkSheetEntryType">
      <doc xml:space="preserve">Subset of GtkEditable Widgets to allow selecting a widget
from glade-3</doc>
      <member name="default"
              value="0"
              c:identifier="GTK_SHEET_ENTRY_TYPE_DEFAULT">
        <doc xml:space="preserve">default, applicat. controlled</doc>
      </member>
      <member name="gtk_entry"
              value="1"
              c:identifier="GTK_SHEET_ENTRY_TYPE_GTK_ENTRY">
        <doc xml:space="preserve">GtkEntry</doc>
      </member>
      <member name="gtk_text_view"
              value="2"
              c:identifier="GTK_SHEET_ENTRY_TYPE_GTK_TEXT_VIEW">
        <doc xml:space="preserve">GtkTextView</doc>
      </member>
      <member name="gtk_data_entry"
              value="3"
              c:identifier="GTK_SHEET_ENTRY_TYPE_GTK_DATA_ENTRY">
      </member>
      <member name="gtk_data_text_view"
              value="4"
              c:identifier="GTK_SHEET_ENTRY_TYPE_GTK_DATA_TEXT_VIEW">
        <doc xml:space="preserve">GtkDataTextView</doc>
      </member>
      <member name="gtk_spin_button"
              value="5"
              c:identifier="GTK_SHEET_ENTRY_TYPE_GTK_SPIN_BUTTON">
        <doc xml:space="preserve">GtkSpinButton</doc>
      </member>
      <member name="gtk_combo_box"
              value="6"
              c:identifier="GTK_SHEET_ENTRY_TYPE_GTK_COMBO_BOX">
        <doc xml:space="preserve">GtkComboBox</doc>
      </member>
      <member name="gtk_combo_box_entry"
              value="7"
              c:identifier="GTK_SHEET_ENTRY_TYPE_GTK_COMBO_BOX_ENTRY">
        <doc xml:space="preserve">GtkComboBoxEntry</doc>
      </member>
      <member name="gtk_combo"
              value="8"
              c:identifier="GTK_SHEET_ENTRY_TYPE_GTK_COMBO">
        <doc xml:space="preserve">GtkCombo, Deprecated</doc>
      </member>
    </enumeration>
    <record name="SheetRange"
            c:type="GtkSheetRange"
            glib:type-name="GtkSheetRange"
            glib:get-type="gtk_sheet_range_get_type"
            c:symbol-prefix="sheet_range">
      <doc xml:space="preserve">Defines a rectangular range of cells.</doc>
      <field name="row0" writable="1">
        <doc xml:space="preserve">upper left cell</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="col0" writable="1">
        <doc xml:space="preserve">upper left cell</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="rowi" writable="1">
        <doc xml:space="preserve">lower right cell</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="coli" writable="1">
        <doc xml:space="preserve">lower right cell</doc>
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <record name="SheetRow" c:type="GtkSheetRow">
      <doc xml:space="preserve">The GtkSheetRow struct contains only private data.
It should only be accessed through the functions described below.</doc>
      <field name="name" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="height" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="requisition" readable="0" private="1">
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="top_ypixel" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="max_extent_height" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="button" readable="0" private="1">
        <type name="SheetButton" c:type="GtkSheetButton"/>
      </field>
      <field name="is_sensitive" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="is_visible" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="tooltip_markup" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="tooltip_text" readable="0" private="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <enumeration name="SheetState" c:type="GtkSheetState">
      <doc xml:space="preserve">Selection state of the #GtkSheet</doc>
      <member name="normal" value="0" c:identifier="GTK_SHEET_NORMAL">
        <doc xml:space="preserve">nothing selected</doc>
      </member>
      <member name="row_selected"
              value="1"
              c:identifier="GTK_SHEET_ROW_SELECTED">
        <doc xml:space="preserve">one row selected</doc>
      </member>
      <member name="column_selected"
              value="2"
              c:identifier="GTK_SHEET_COLUMN_SELECTED">
        <doc xml:space="preserve">one column selected</doc>
      </member>
      <member name="range_selected"
              value="3"
              c:identifier="GTK_SHEET_RANGE_SELECTED">
        <doc xml:space="preserve">rectangular area of cells selected</doc>
      </member>
    </enumeration>
    <enumeration name="SheetVerticalJustification"
                 c:type="GtkSheetVerticalJustification">
      <doc xml:space="preserve">Vertical text alignment.</doc>
      <member name="default"
              value="0"
              c:identifier="GTK_SHEET_VERTICAL_JUSTIFICATION_DEFAULT">
        <doc xml:space="preserve">default</doc>
      </member>
      <member name="top"
              value="1"
              c:identifier="GTK_SHEET_VERTICAL_JUSTIFICATION_TOP">
        <doc xml:space="preserve">top aligned</doc>
      </member>
      <member name="middle"
              value="2"
              c:identifier="GTK_SHEET_VERTICAL_JUSTIFICATION_MIDDLE">
        <doc xml:space="preserve">middle aligned</doc>
      </member>
      <member name="bottom"
              value="3"
              c:identifier="GTK_SHEET_VERTICAL_JUSTIFICATION_BOTTOM">
        <doc xml:space="preserve">bottom aligned</doc>
      </member>
    </enumeration>
    <function name="data_format" c:identifier="gtk_data_format">
      <doc xml:space="preserve">format @str according to @dataformat.

formatting instructions:

'' (the empty string) does no formatting at all.

'int8' is formatted as a singed 8-bit integer value with
optional '-' sign.

'int16' is formatted as a signed 16-bit integer with optional
'-' sign.

'int32' is formatted as a signed 32-bit integer with optional
'-' sign.

'money' is formatted as a double float value with 2 decimal
digits and 1000s-separators

'float,N' is formatted as a double float value with N decimal
digits and 1000s-separators

'bit' is formatted as a boolean value [0,1].</doc>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">a pointer to an internal static buffer, with the
formatted data</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve">the string to be formatted</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="dataformat" transfer-ownership="none">
          <doc xml:space="preserve">formatting instructions</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="data_format_remove" c:identifier="gtk_data_format_remove">
      <doc xml:space="preserve">reverse the effect of #gtk_data_format, i.e. remove all
formatting characters, apply trailing dash</doc>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">a pointer to an internal static buffer, with the
unformatted data</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve">the string to be unformatted</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="dataformat" transfer-ownership="none">
          <doc xml:space="preserve">formatting instructions</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
